function __fish_mux_no_subcommand --description 'Test if mux has yet to be given the subcommand'
    for i in (commandline -opc)
        if contains -- $i commands copy debug delete doctor help implode list new open start version
            return 1
        end
    end
    return 0
end

function __fish_mux_completion_command --description 'Test if mux command is allowed for completion'
    for i in (commandline -opc)
        if contains -- $i copy debug delete open start
            return 0
        end
    end
    return 1
end

function __fish_print_mux_projects --description 'Print mux projects'
  set -l mux_path $HOME/.tmuxinator
  find $mux_path -type f -depth 1 | sed "s/"(echo $HOME | sed 's/\//\\\\\//g')"\/.tmuxinator\/\(.*\)\.yml/\1/"
end

# commands
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'commands' -d 'Lists commands available in tmuxinator'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'copy' -d 'Copy an existing project to a new project and open it in your editor'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'debug' -d 'Output the shell commands that are generated by tmuxinator'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'delete' -d 'Deletes given project'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'doctor' -d 'Look for problems in your configuration'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'help' -d 'Describe available commands or one specific command'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'implode' -d 'Deletes all tmuxinator projects'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'list' -d 'Lists all tmuxinator projects'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'new' -d 'Create a new project file and open it in your editor'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'open' -d 'Open a project file in your editor'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'start' -d 'Start a tmux session using a project\'s tmuxinator config'
complete -c tmuxinator -f -n '__fish_mux_no_subcommand' -a 'version' -d 'Display installed tmuxinator version'

# commands needing project completion
complete -c tmuxinator -f -n 'not __fish_mux_no_subcommand; and __fish_mux_completion_command' -a '(__fish_print_mux_projects)' -d 'Tmuxinator project'
